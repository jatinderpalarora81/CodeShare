pipeline {
    agent any

    environment {
        PYTHON_HOME = '/path/to/python'  // Path to your Python installation
    }

    stages {
        stage('Set Up Python Environment') {
            steps {
                script {
                    // Create and activate a virtual environment
                    sh "${PYTHON_HOME}/bin/python -m venv venv"
                    sh "source venv/bin/activate"
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    sh "pip install -r requirements.txt"
                }
            }
        }
        stage('Run Python Script') {
            steps {
                script {
                    sh "python your_script.py"
                }
            }
        }
    }
}


def pythonExecutable = 'path/to/python'  // Replace with the path to your Python executable
def virtualEnvPath = 'path/to/virtualenv'  // Replace with the path to your virtual environment
def pythonScriptPath = 'path/to/your_script.py'  // Replace with the path to your Python script

node {
    stage('Set Up Python Environment') {
        // Activate the virtual environment
        bat "${virtualEnvPath}/Scripts/activate"  // For Windows
        // sh "source ${virtualEnvPath}/bin/activate"  // For Linux/Mac
    }
    
    stage('Run Python Script') {
        // Run the Python script within the virtual environment
        bat "${pythonExecutable} ${pythonScriptPath}"  // For Windows
        // sh "${pythonExecutable} ${pythonScriptPath}"  // For Linux/Mac
    }
    
    stage('Deactivate Python Environment') {
        // Deactivate the virtual environment
        bat "${virtualEnvPath}/Scripts/deactivate"  // For Windows
        // sh "deactivate"  // For Linux/Mac
    }
}


#!/usr/bin/env groovy

def pythonExecutable = 'path/to/python'  // Replace with the path to your Python executable
def virtualEnvPath = 'path/to/virtualenv'  // Replace with the path to your virtual environment
def pythonScriptPath = 'path/to/your_script.py'  // Replace with the path to your Python script

def runCommand(command) {
    def process = command.execute()
    process.waitFor()
    println "Exit value: ${process.exitValue()}"
    println "Output:\n${process.text}"
}

runCommand("source ${virtualEnvPath}/bin/activate")
runCommand("${pythonExecutable} ${pythonScriptPath}")
runCommand("deactivate")



def virtualEnvName = 'myenv'  // Name of the virtual environment
def pythonExecutable = '/path/to/python'  // Replace with the path to your Python executable
def pythonScriptPath = '/path/to/your_script.py'  // Replace with the path to your Python script

def runCommand(command) {
    def process = command.execute()
    process.waitFor()
    println "Exit value: ${process.exitValue()}"
    println "Output:\n${process.text}"
}

runCommand("${pythonExecutable} -m venv ${virtualEnvName}")  // Create virtual environment
runCommand("source ${virtualEnvName}/bin/activate && python ${pythonScriptPath} && deactivate")  // Run Python script

// Optionally, you can delete the virtual environment after the script has finished
runCommand("rm -rf ${virtualEnvName}")


#!/usr/bin/env groovy

def virtualEnvName = 'myenv'
def pythonExecutable = '/usr/local/bin/python3'  // Modify this with the correct path to your Python executable
def pythonScriptPath = '/path/to/your_script.py'  // Replace with the path to your Python script

def processBuilder = new ProcessBuilder('/bin/bash', '-c', """
    $pythonExecutable -m venv $virtualEnvName
    source $virtualEnvName/bin/activate
    python $pythonScriptPath
    deactivate
""")
processBuilder.inheritIO().start().waitFor()
